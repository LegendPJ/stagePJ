<?php

/**
 * BaseNews
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $titre
 * @property integer $numero
 * @property string $contenu
 * @property string $auteur
 * @property string $lien
 * @property string $photo
 * @property string $image
 * @property string $date
 * @property string $visible
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNews extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('news');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('titre', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '100',
             ));
        $this->hasColumn('numero', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('contenu', 'string', 10000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '10000',
             ));
        $this->hasColumn('auteur', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('lien', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('photo', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('image', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('date', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('visible', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}